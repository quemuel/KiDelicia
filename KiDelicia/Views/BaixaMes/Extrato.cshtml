@model KiDelicia.Models.BaixaMes

@{
    ViewBag.Title = "Extrato";
}

@Styles.Render("~/Content/bootstrapDatepicker")
<section id="page-content">
    <div class="header-content">
        <h2><i class="fa fa-download"></i> @ViewBag.Title</h2>
        <div class="breadcrumb-wrapper hidden-xs">
            <span class="label">Você está aqui:</span>
            <ol class="breadcrumb">
                <li>
                    <i class="fa fa-home"></i>
                    <a href="@Url.Action("index", "Home")">Home</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li class="active">@ViewBag.Title</li>
            </ol>
        </div>
    </div>
    <div class="body-content animated fadeIn">
        <div class="row">
            <div class="col-md-12">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.FlagCliente, string.Format("{0}:", Html.DisplayNameFor(model => model.FlagCliente)), htmlAttributes: new { @class = "control-label" })
                            <div class="row">
                                <div class="col-md-6">
                                    @Html.CheckBoxFor(c => c.FlagCliente, new { @class = "form-control switch", @data_on_text = "Cliente", @checked="", @data_off_text = "Empresa", @data_on_color = "success" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row" id="div_cliente" @(Model == null || Model.FlagCliente ? "" : "style=display:none")>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.ClienteId, string.Format("{0}:", Html.DisplayNameFor(model => model.ClienteId)), htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("ClienteId", null, "Selecione...", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row" id="div_empresa"  @(Model == null || Model.FlagCliente  ? "style=display:none" : "")>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.EmpresaId, string.Format("{0}:", Html.DisplayNameFor(model => model.EmpresaId)), htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("EmpresaId", null, "Selecione...", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmpresaId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.DataMesReferenciaInicial, HttpUtility.HtmlDecode(string.Format("{0}:", Html.DisplayNameFor(model => model.DataMesReferenciaInicial))), htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.DataMesReferenciaInicial, new { htmlAttributes = new { @class = "form-control maskDateMonth" } })
                                    @Html.ValidationMessageFor(model => model.DataMesReferenciaInicial, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.DataMesReferenciaFinal, HttpUtility.HtmlDecode(string.Format("{0}:", Html.DisplayNameFor(model => model.DataMesReferenciaFinal))), htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.DataMesReferenciaFinal, new { htmlAttributes = new { @class = "form-control maskDateMonth" } })
                                    @Html.ValidationMessageFor(model => model.DataMesReferenciaFinal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-12 btn-group">
                                    @Html.ActionLink("Voltar", "Index", "", new { @class = "btn btn-default" })
                                    <input type="submit" value="Gerar Extrato" class="btn btn-success" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        @if (Request.RequestType == "POST")
        {
            <div class="row">
                <div class="col-md-12">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="text-strong">
                                    Mês Referencia
                                </th>
                                <th class="text-strong">
                                    Valor Gasto
                                </th>
                                <th class="text-strong">
                                    Valor Pago
                                </th>
                                <th class="text-strong">
                                    Saldo
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                List<KiDelicia.Models.Extrato> extrato = ViewBag.extrato;
                            }
                            @if (extrato.Count > 0) {
                                foreach (var item in extrato)
                                {
                                    decimal saldoParcial = (item.ValorPago - item.ValorGasto);
                                    <tr>
                                        <td>
                                            @(item.DataMesReferencia.Month + "/" + @item.DataMesReferencia.Year)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ValorGasto)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ValorPago)
                                        </td>
                                        <th @((saldoParcial < 0) ? "class=text-danger" : "class=text-success")>
                                            @saldoParcial
                                        </th>
                                    </tr>
                                }
                                decimal somaValorGasto = extrato.Sum(x => x.ValorGasto);
                                decimal somaValorPago = extrato.Sum(x => x.ValorPago);
                                decimal saldo = somaValorPago - somaValorGasto;
                                <tr class="active">
                                    <th>
                                        Total
                                    </th>
                                    <th>
                                        @somaValorGasto
                                    </th>
                                    <th>
                                        @somaValorPago
                                    </th>
                                    <th @((saldo < 0) ? "class=text-danger" : "class=text-success")>
                                        @saldo
                                    </th>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="text-center">
                                        Não há registro para este filtro
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </div>    
    @Html.Partial("_footerAdmin")
</section>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrapDatepicker")